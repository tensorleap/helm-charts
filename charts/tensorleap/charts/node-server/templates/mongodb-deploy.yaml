{{ if .Values.mongodb.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb
  labels:
    app: mongodb
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
      annotations:
        ad.datadoghq.com/mongodb.logs: '[{"source": "mongo", "service": "node-server"}]'
    spec:
      containers:
        - name: mongodb
          image: {{ .Values.mongodb_image }}
          env:
            - name: MONGO_DB_PATH
              value: /tl/data/db
          command:
            - /scripts/entrypoint.sh
          imagePullPolicy: IfNotPresent
          ports:
            - name: mongodb
              containerPort: 27017
          livenessProbe:
            failureThreshold: 6
            initialDelaySeconds: 30
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 10
            exec:
              command:
                - /scripts/ping.sh
          readinessProbe:
            failureThreshold: 6
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
            exec:
              command:
                - /scripts/is_ready.sh
          volumeMounts:
            - name: common-scripts
              mountPath: /scripts
            - name: datadir
              mountPath: /tl
      priorityClassName: high-priority
      volumes:
        - name: common-scripts
          configMap:
            name: mongodb-common-scripts
            defaultMode: 0550
        - name: datadir
          persistentVolumeClaim:
            claimName: mongodb-data
{{ end }}
