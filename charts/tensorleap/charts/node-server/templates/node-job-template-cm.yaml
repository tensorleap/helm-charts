apiVersion: v1
kind: ConfigMap
metadata:
  name: node-job-template-cm
data:
  job: |
    apiVersion: batch/v1
    kind: Job
    metadata:
        name: pleaceholder-job-name
        labels:
            tags.datadoghq.com/env: {{ .Values.env_name }}
            tags.datadoghq.com/service: {{ .Release.Name }}
    spec:
        backoffLimit: 0
        activeDeadlineSeconds: 28800 # 8 hours
        template:
            metadata:
                labels:
                    app: tensorleap-node-job
                annotations:
                    ad.datadoghq.com/tensorleap-node-job.logs: '[{"source": "nodejs", "service": "node-job"}]'
            spec:
                serviceAccountName: node-server-sa
                priorityClassName: medium-priority
                containers:
                  - name: tensorleap-node-job
                    image: {{ .Values.image }}:{{ .Values.image_tag }}
                    imagePullPolicy: IfNotPresent
                    volumeMounts:
                      - name: minio
                        mountPath: /usr/minio
                restartPolicy: Never
                volumes:      
                  - name: minio
                    persistentVolumeClaim:
                        claimName: tensorleap-minio
