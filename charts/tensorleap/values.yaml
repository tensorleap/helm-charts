ingress-nginx:
  fullnameOverride: ingress-nginx

elasticsearch:
  replicas: 1
  sysctlInitContainer:
    enabled: false
  esConfig:
    elasticsearch.yml: |
      node.store.allow_mmap: false
      discovery.type: single-node
  extraEnvs:
    - name: cluster.initial_master_nodes
      value: ""
  lifecycle:
    postStart:
      exec:
        command:
          - bash
          - -c
          - |
            #!/bin/bash
            set -euo pipefail;
            while [[ "$(curl -s -o /dev/null -w '%{http_code}\n' -L 127.0.0.1:9200/_cluster/health?wait_for_status=yellow&timeout=5s)" != "200" ]]; do sleep 3; done

            echo 'Setting zero-replicas index template';
            curl 127.0.0.1:9200/_template/zero-replicas -s --fail -XPUT -H 'Content-Type: application/json' -d '{"index_patterns":["*"],"settings":{"number_of_replicas":0}}'
  antiAffinity: soft
  esJavaOpts: -Dlog4j2.formatMsgNoLookups=true

kibana:
  fullnameOverride: kibana
  healthCheckPath: /kibana/app/kibana
  image: gcr.io/tensorleap/kibanimat
  imageTag: master-f8556951-stable
  kibanaConfig:
    kibana.yml: |
      server:
        basePath: /kibana
        rewriteBasePath: true
  elasticsearchHosts: http://elasticsearch-master:9200

rabbitmq:
  fullnameOverride: rabbitmq
  auth:
    user: user
    password: 3e3abae2-6325-11ec-90d6-0242ac120003
    erlangCookie: 3e3abae2-6325-11ec-90d6-0242ac120003
  persistence:
    size: 500Mi

minio:
  mode: standalone
  existingSecret: minio-secret
  service:
    type: NodePort
  persistence:
    size: 2Gi
    VolumeName: minio-data
  resources:
    requests:
      memory: 500Mi
  buckets:
    - name: session
      policy: public

mongodb:
  fullnameOverride: mongodb
  auth:
    enabled: false
  persistence:
    existingClaim: mongodb-data
